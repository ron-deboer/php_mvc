{% extends "base.html" %}

{% block title %}Userlist Route{% endblock %}

{% block body %}

<table v-scope class="table">
    <thead>
        <tr>
        <th>User Name</th>
        <th>First Name</th>
        <th>Last Name</th>
        <th>Email</th>
        <th>Phone</th>
        <th>Edit</th>
        <th>Delete</th>
        </tr>
    </thead>
    <tbody>
        <tr v-for="user in store.users" :key="user.id">
            <td>${user.username}</td>
            <td>${user.firstname}</td>
            <td>${user.lastname}</td>
            <td>${user.email}</td>
            <td>${user.phone}</td>
            <td><a class="btn btn-success" @click="store.edit(user.id)">Edit</a></td>
            <td><a class="btn btn-primary" @click="store.delete(user.id)">Delete</a></td>
        </tr>
    </tbody>
</table>

{% endblock %}

{% block script %}

<script src="js/userservice.js"></script>
<script type="module">
    import { createApp, reactive } from "./js/petite-vue-module.js"
    const userservice = new UserService();

    // reconnect to server eventsource on browser wakeup after timeout
    let worker1 = new Worker("./js/wakeup.js");
    worker1.onmessage = function (ev) {
      if (ev && ev.data === 'wakeup') {
         console.log('WAKEUP !!!!!!!!!!!');
         initEventSource();
      }
    }

    function initEventSource() {
        let events = new EventSource('http://localhost:3000/api/stream');
        events.addEventListener("message", async (event) => {
            const data = JSON.parse(event.data);
            if (data.action == 'DB_INSERT' || data.action == 'DB_DELETE') {
                store.users = await userservice.getAllUsers();
                // window.location.href = '/userlist';
            }
        });
        events.addEventListener("error", async (event) => {
            console.log('EventSource error');
        });
    }

    const store = reactive({
        users: {{users|json_encode()|raw}},
        delete(id) {
            const idx = this.users.findIndex(x => x.id == id);
            this.users.splice(idx, 1);
            userservice.deleteUser(id);
            const notyf = new Notyf();
            notyf.success('Delete User Success');
        },
        edit(id) {
            window.location.href = '/useredit/' + id;
        }
    });

    createApp({
        store,
        $delimiters: ['${', '}']
    }).mount();

    initEventSource();

</script>

{% endblock %}
